using RetroDev.OpenUI.Core.Coordinates;
using RetroDev.OpenUI.Events;

namespace RetroDev.OpenUI.Core;

/// <summary>
/// Creates and manages a window.
/// </summary>
public interface IWindowManager
{
    /// <summary>
    /// The rendering engine that renders in the window managed by <see langword="this"/> <see cref="IWindowManager"/>.
    /// </summary>
    IRenderingEngine RenderingEngine { get; }

    /// <summary>
    /// An abstract representation of the window ID. The ID of windows generated using <see cref="this"/>
    /// <see cref="IWindowManager"/> must match with the respective window event generated by <see cref="IEventSystem"/>
    /// specified in an <see cref="Application"/> to ensure that events are sent to the right window.
    /// </summary>
    IWindowId WindowId { get; }

    /// <summary>
    /// Whether the window is visible.
    /// </summary>
    bool Visible { get; set; }

    /// <summary>
    /// The area where to render the window relative to the screen.
    /// </summary>
    Area RenderingArea { get; set; }

    /// <summary>
    /// Dispose the window and deallocates all the graphical resources.
    /// </summary>
    void Shutdown();
}
